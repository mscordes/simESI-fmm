cmake_minimum_required(VERSION 3.20)

project(
    simESI-fmm
    VERSION 2.0
    LANGUAGES CXX
    HOMEPAGE_URL "https://github.com/mscordes/simESI-fmm"
)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

if(UNIX)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O3")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -g -O0 -Wall -Wextra -DDEBUG")
elseif(MSVC)
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /O2")
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /Zi /Od /DEBUG /DDEBUG")
else()
    message(FATAL_ERROR "Unsupported platform")
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

file(GLOB_RECURSE SIMESI_SOURCES CONFIGURE_DEPENDS "src/*.cpp")
file(GLOB_RECURSE SIMESI_HEADERS CONFIGURE_DEPENDS "src/*.h")

set(SIMESI_INCLUDE_DIRS "")
foreach(_headerFile ${SIMESI_HEADERS})
    get_filename_component(_dir ${_headerFile} PATH)
    list(APPEND SIMESI_INCLUDE_DIRS ${_dir})
endforeach()
list(REMOVE_DUPLICATES SIMESI_INCLUDE_DIRS)


add_executable(simESI
    ${SIMESI_SOURCES}
    ${SIMESI_HEADERS}
)

target_include_directories(simESI PRIVATE ${SIMESI_INCLUDE_DIRS})

set_target_properties(simESI PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}
    RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_SOURCE_DIR}
    RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_SOURCE_DIR}
)

source_group(
    TREE "${CMAKE_CURRENT_SOURCE_DIR}/src"
    FILES ${SIMESI_SOURCES} ${SIMESI_HEADERS}
)
